vector<int> val;
val.insert(iteratbefore that iteratoror,value);//will add value in val brfore iteratorpointing
val.inset(iterator,numberof repeats you want ,value) //no of repeats time your value will insert 
*max_element(vec.begin(), vec. end()) 
Return the max element in the vector

*min_element (vec.begin(), vec. end()) 
Return the min element of the vector
list.empty() checks if the list is empty. Returns '1' if empty and '0' if not.

#include <iostream>
#include <map>
#include <string>
using namespace std;
int main()
{
    map<string,int> student_marks;
    student_marks["sagar"] =90;
    student_marks["prince"] = 92;
    student_marks["yash"]=91;
    student_marks.insert({{"hardik",50},{"aditya s",40})
    map<string,int> :: iterator iter;
    for(iter =student_marks.begin();iter!=student_marks.end();iter++){
        cout<<iter->first<<" "<<iter->second<<endl;
    }
}